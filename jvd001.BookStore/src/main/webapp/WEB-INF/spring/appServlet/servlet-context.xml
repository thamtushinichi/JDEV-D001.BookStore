<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 <!-- setting maximum upload size -->
	<beans:property name="maxUploadSize" value="10000000" />
	</beans:bean>
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/db_bookstore" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>jvd001.bookstore.app.model.bookmanagement.Book</beans:value>
				<beans:value>jvd001.bookstore.app.model.bookmanagement.Upload</beans:value>
				<beans:value>jvd001.bookstore.app.model.classification.Category</beans:value>
				<beans:value>jvd001.bookstore.app.model.usermanagement.User</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<!-- <beans:prop key="hibernate.current_session_context_class">thread</beans:prop> -->
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id = "hibernateTemplate" class = "org.springframework.orm.hibernate4.HibernateTemplate">
	<beans:property name = "sessionFactory" ref ="sessionFactory"/>
	</beans:bean>
	<beans:bean id = "bookmanagementDAO" class = "jvd001.bookstore.app.dao.bookmanagement.BookManagementDAOImpl" >
		<beans:property name ="hibernateTemplate" ref ="hibernateTemplate"></beans:property>
	</beans:bean>
	<beans:bean id="bookmanagementService" class="jvd001.bookstore.app.service.bookmanagement.BookManagementServiceImpl">
		<beans:property name="bookManagementDAO" ref ="bookmanagementDAO"></beans:property>
	</beans:bean>
	
	<!--User Login  -->
	<beans:bean id = "UserLoginDAO" class = "jvd001.bookstore.app.dao.usermanagement.UserLoginDAOImpl" >
		<beans:property name ="hibernateTemplate" ref ="hibernateTemplate"></beans:property>
	</beans:bean>
	<beans:bean id="UserLoginService" class="jvd001.bookstore.app.service.usermanagement.UserLoginServiceImpl">
		<beans:property name="userLoginDAO" ref ="UserLoginDAO"></beans:property>
	</beans:bean>
	
	<!--User Signup  -->
	<beans:bean id = "UserSignupDAO" class = "jvd001.bookstore.app.dao.usermanagement.UserSignupDAOImpl" >
		<beans:property name ="hibernateTemplate" ref ="hibernateTemplate"></beans:property>
	</beans:bean>
	<beans:bean id="UserSignupService" class="jvd001.bookstore.app.service.usermanagement.UserSignupServiceImpl">
		<beans:property name="userSignupDAO" ref ="UserSignupDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="categoryDAO" class="jvd001.bookstore.app.dao.classification.CategoryDAOImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	<beans:bean id="categoryService" class="jvd001.bookstore.app.service.classification.CategoryServiceImpl">
		<beans:property name="categoryDAO" ref="categoryDAO"></beans:property>
	</beans:bean>

	

	<context:component-scan base-package="jvd001.bookstore.app" />
	<context:component-scan base-package="jvd001.bookstore.app.controller.bookmanagement" />
	<context:component-scan base-package="jvd001.bookstore.app.controller.classification" />
	<context:component-scan base-package="jvd001.bookstore.app.controller.usermanagement" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
</beans:beans>
